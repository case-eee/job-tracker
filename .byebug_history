exit
current_path
exit
sorted_companies
exit
rankings
exit
rankings
exit
rankings
exit
breakdowns
exit
Company.breakdown_by_location
companies
Company.breakdown_by_location
breakdowns
exit
Company.breakdown_by_location
companies.breakdown_by_location
companies.first.jobs
exit
companies.first.jobs
companies
exit
companies.first.jobs
companies
exit
breakdown
exit
output
exit
params
exit
four.split(":")[0]
four.split(":")
four =  @jobs_by_location.fourth
four @jobs_by_location.fourth
four
four = _
@jobs_by_location.fourth
@jobs_by_location.first
@jobs_by_location
exit
Company.all.joins(:jobs).group(:city).count(:jobs)
Company.all.group(:city).count(:jobs)
Company.all.group(:city).count(:city)
Company.all
joins(:company).count(:city)
exit
@jobs_by_location
exit
      @companies = Company.where(city: params[:location])
      @companies = Company.where(:city, params[:location])
params
exit
params
exit
params[:location]
params
exit
    first_three = sorted.first(3).group_by { |company, value|  [company.name, company.jobs.average_level_of_interest] }
    first_three = sorted.first(3).group_by { |company, level|  [company.jobs.average_level_of_interest, company.name] }
    first_three = sorted.first(3).group_by { |company, level|  company.jobs.average_level_of_interest => company.name }
    first_three = sorted.first(3).group_by { |company|  company.jobs.average_level_of_interest => company.name }
    first_three = sorted.first(3).group_by { |company|  company.jobs.average_level_of_interest, company.name }
    first_three = sorted.first(3).group_by { |level, company|  company.jobs.average_level_of_interest }
    first_three = sorted.first(3).group_by { |company|  company.jobs.average_level_of_interest }
    first_three = sorted.first(3).group_by { |company|  [company.name, company.jobs.average_level
    first_three = sorted.first(3).group_by { |company, value|  [company.name, company.jobs.average_level_of_interest] }
sorted
exit
@rankings
exit
    first_three = sorted.first(3).group_by { |company, value|  [company.name, company.jobs.average_level_of_interest] }.keys
    first_three = sorted.first(3).group_by { |company, value|  [company.name, company.jobs.average_level_of_interest] }
first_three
exit
first_three
byebug
exit
@rankings
exit
first_three.inspect
first_three
exit
first_three
exit
grouped
exit
grouped
exit
grouped
exit
@rankings.first
@rankings
exit
@rankings
exit
@rankings
exit
@rankings.first.name
@rankings.first
@rankings
exit
co_1.jobs.average_level_of_interest
co_1.jobs.level_of_interest
co_1.jobs.count
co_1.jobs
co_1 = Company.first
Company.all
exit
Company.first.jobs.average_level_of_interest
Company.first.average_level_of_interest
joins(:jobs).group(:level_of_interest).count(:level_of_interest)
joins(:jobs).group(:level_of_interest).count(:level_of_interst)
joins(:jobs).group(:level_of_interest)
joins(:jobs).group(:level_of_interst)
joins(:jobs)
Company.first.jobs.average_level_of_interest
Company.first.jobs.average_level_of_interst
Company.jobs
self.jobs
jobs
exit
format_breakdowns
hash.format_breakdowns
hash =   group(:level_of_interest).count(:level_of_interest)
play -l 8
exit
@companies.sort_by_city
@companies
exit
@companies.order(:jobs.city)
@companies.order(jobs.city)
@companies.joins(jobs)
@companies.jobs
@companies.count
@companies
exit
params
exit
params
exit
params
exit
params[:company_id]
params[:contact].company_id
params[:contact.company_id]
params[:contact.company]
params[:contact][:company_id]
params[:contact]
params
exit
params
exit
@contact
exit
params
exit
@contact = Contact.new(company_id: @company.id)
Contact.new(company_id: @company.id)
Contact.new
play -l 9
@company.id
@company
exit
@comment
@job
@company
exit
@job.comments
@comment
@job.id
new_comment_path(job_id: @job.id)
new_comment_path
